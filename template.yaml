AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Search Application Resources

Globals:
  Function:
    Timeout: 20

Resources:
  ElasticsearchDomain:
    Type: 'AWS::Elasticsearch::Domain'
    Properties:
      DomainName: 'retirementplans'
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - 'es:ESHttp*'
            Resource: !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/retirementplans/*'
      EBSOptions:
        EBSEnabled: 'true'
        VolumeSize: 10
        VolumeType: gp2
      ElasticsearchClusterConfig:
        InstanceCount: "2"
        ZoneAwarenessEnabled: "true"
        InstanceType: "m3.medium.elasticsearch"
      ElasticsearchVersion: '7.1'

  s3BucketSearchApp:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      BucketName: search-app-input-bucket

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: {Service: [lambda.amazonaws.com]}
            Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      Policies:
        - PolicyName: S3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                Resource: "arn:aws:s3:::*"

  ElasticSearchIndexerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ElasticSearchIndexerFunction
      Handler: lambda.ElasticSearchIndexerFunction::handleRequest
      Runtime: java8
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 3008
      Timeout: 900
      Environment:
        Variables:
          ES_ENDPOINT: !GetAtt ElasticsearchDomain.DomainEndpoint
      Events:
        SearchApp:
          Type: S3
          Properties:
            Bucket: !Ref s3BucketSearchApp
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .csv

  SearchFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ElasticSearchIndexerFunction
      Handler: lambda.SearchFunction::handleRequest
      Runtime: java8
      # Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 512
      Timeout: 300
      Environment:
        Variables:
          ES_ENDPOINT: !GetAtt ElasticsearchDomain.DomainEndpoint
      Events:
        SearchApi:
          Type: Api
          Properties:
            Path: '/search'
            Method: get


Outputs:
  DomainArn:
    Value: !GetAtt ElasticsearchDomain.DomainArn
  DomainEndpoint:
    Value: !GetAtt ElasticsearchDomain.DomainEndpoint
  ElasticSearchIndexerFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt ElasticSearchIndexerFunction.Arn
  ElasticSearchIndexerFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt ElasticSearchIndexerFunction.Arn
